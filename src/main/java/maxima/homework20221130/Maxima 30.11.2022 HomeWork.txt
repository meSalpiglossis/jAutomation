
// NOTE: Selenium entity
class WebElement{
	public WebElement(String locator){
		System.out.println("WebElement");
	}
}

class BasePage{
	public BasePage(){
		System.out.println("BasePage");
	}
}

// DTO = Data Transfer Object
// POJO = Plain Old Java Object
class LoginData{
	public LoginData(String login, String password){
		this.login = login;
		this.password = password;
	}
	
	public String getLogin(){
		System.out.println("LoginData.getLogin = " + login);
		return login;
	}
	public String getPassword(){
		// TODO: Add logging
		return password;
	}
	
	private String login;
	private String password;
}

class LoginPage extends BasePage{
	public void login(LoginData ld){
		// TODO: Impl me!
		enterLogin(ld.getLogin());
		enterPassword(ld.getPassword());
		clickSubmitButton();
	}
	
	private void enterLogin(String login){
		// TODO: do something with login_eb
		// TODO: Add logging
		
		login_eb.enterText(login);
	}
	
	private void enterPassword(String password){
		// TODO: do something with password_eb
		// TODO: Add logging
		
		password_eb.enterText(password);
	}
	
	private void clickSubmitButton(){
		// TODO: do something with submit_button
		// TODO: Add logging
		
		submit_button.click();
	}	
	
	private WebElement login_eb = new WebElement("Login Edit Box locator");
	private WebElement password_eb = new WebElement("Password Edit Box locator");
	private WebElement submit_button = new WebElement("Submit Button locator");
}

class HomePage extends BasePage{
	public boolean isImportantLabelAvaliable(){
		// TODO: Add logging
		return true;
	}
	
	private WebElement important_label = new WebElement("Importnt Label locator");
}

class BaseTest{
	public BaseTest(){
		System.out.println("BaseTest");
	}
}

// TODO*: add 2 phase autentification for login functionality
// TODO**: Dynamic Page Object (object based) => Static Page Object (only static method based)

// TODO: use JUnit or TestNG
LoginTest extends BaseTest{
	public void loginTest(){
		// TODO: Add reading from default input file
		// TODO***: Add xml serialization \ deSerialization for LoginData  
		// 3A Rule
		
		LoginData ld = new LoginData("some login", "some password");
		LoginPage loginPage = new LoginPage();
		loginPage.login(ld);
		
		HomePage homePage = new HomePage();
		Assert.isTrue(homePage.isImportantLabelAvaliable());		
	}
}